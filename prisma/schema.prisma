// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Room {
  id Int @id @default(autoincrement())
  name String
  price Int
  description String
  image String
  availability Boolean
  roomDetailId Int?

  bookings Booking[]
  roomDetail   RoomDetail? @relation(fields: [roomDetailId], references: [id])
}

model RoomDetail {
  id Int @id @default(autoincrement())
  maxGuest Int
  n_beds Int
  feature String
  amenities String
  
  rooms Room[]
  }
  

model Booking {
  id          Int      @id @default(autoincrement())
  roomId      Int
  userId      Int?
  customerName String
  startDate   DateTime
  endDate     DateTime

  room        Room    @relation(fields: [roomId], references: [id])
  user        User?     @relation(fields: [userId], references: [id])
}


model User {
  id          Int      @id @default(autoincrement())
  name        String
  email       String   @unique
  password    String
  userDetail  UserDetail?
  bookings    Booking[]
  tokens      Token[]
  
  
}

model UserDetail {
  id            Int      @id @default(autoincrement())
  phoneNumber   String?
  address       String?
  status        String?
  profilePicture String?

  userId        Int      @unique
  user          User     @relation(fields: [userId], references: [id])
}

model Token {
  id        Int      @id @default(autoincrement())
  token     String
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
}

model ContactMessage {
  id        Int      @id @default(autoincrement())
  email     String
  subject   String
  message   String
  createdAt DateTime @default(now())
}